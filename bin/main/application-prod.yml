# Production Environment Configuration
# Application: gradlehigh211100

# Server configuration
server:
  port: 8080
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,application/javascript,application/json
    min-response-size: 2048
  tomcat:
    max-threads: 200
    max-connections: 10000
    accept-count: 100
    connection-timeout: 20000

# Spring configuration
spring:
  application:
    name: gradlehigh211100
  profiles:
    active: prod
  # Database configuration
  datasource:
    primary:
      url: jdbc:postgresql://prod-db-server:5432/gradlehigh211100
      username: ${DB_USERNAME}
      password: ${DB_PASSWORD}
      driver-class-name: org.postgresql.Driver
      maximum-pool-size: 30
      minimum-idle: 5
      idle-timeout: 120000
    secondary:
      url: jdbc:postgresql://prod-db-server-replica:5432/gradlehigh211100
      username: ${DB_USERNAME_REPLICA}
      password: ${DB_PASSWORD_REPLICA}
      driver-class-name: org.postgresql.Driver
      maximum-pool-size: 20
      minimum-idle: 3
      idle-timeout: 120000
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        show_sql: false
        use_sql_comments: false
        jdbc.batch_size: 50
        order_inserts: true
        order_updates: true
    open-in-view: false
  # Cache configuration
  cache:
    type: redis
    redis:
      time-to-live: 3600000
      cache-null-values: false
  # Cloud configuration
  cloud:
    config:
      enabled: true
      fail-fast: true
      retry:
        max-attempts: 6
        initial-interval: 1000
        multiplier: 1.5
    service-registry:
      auto-registration:
        enabled: true

# Eureka configuration
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://discovery-service-prod:8761/eureka/
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

# Micronaut configuration
micronaut:
  application:
    name: gradlehigh211100
  server:
    port: ${server.port}
    netty:
      max-header-size: 16KB
      worker:
        threads: 8
      parent:
        threads: 2
  http:
    client:
      read-timeout: 30s
      connect-timeout: 5s
  io:
    watch:
      paths: classpath:views
      restart: false

# Monitoring and metrics
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,loggers,env,httptrace
      base-path: /management
  endpoint:
    health:
      show-details: when_authorized
      roles: ADMIN
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: gradlehigh211100
      environment: production

# Swagger/OpenAPI
springfox:
  documentation:
    swagger:
      v2:
        path: /api-docs
    swagger-ui:
      base-url: /swagger-ui.html
      enabled: true

# Logging configuration
logging:
  file:
    name: /var/log/gradlehigh211100/application.log
    max-size: 100MB
    max-history: 30
  level:
    root: WARN
    org.springframework: INFO
    io.micronaut: INFO
    com.gradlehigh211100: INFO

# API Gateway configuration
api:
  gateway:
    timeout: 60s
    retry:
      max-attempts: 3
      backoff:
        initial-interval: 1000
        multiplier: 2
        max-interval: 10000

# Client services configuration
service:
  user:
    url: http://user-service:8081/api
    timeout: 30s
    circuit-breaker:
      failure-threshold: 50
      reset-timeout: 30s
  product:
    url: http://product-service:8082/api
    timeout: 30s
    circuit-breaker:
      failure-threshold: 50
      reset-timeout: 30s
  order:
    url: http://order-service:8083/api
    timeout: 45s
    circuit-breaker:
      failure-threshold: 50
      reset-timeout: 30s

# Security configuration
security:
  jwt:
    secret: ${JWT_SECRET}
    expiration: 86400000  # 24 hours in milliseconds
    issuer: gradlehigh211100
  cors:
    allowed-origins: https://prod.example.com
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: Authorization,Content-Type
    max-age: 3600

# Application specific settings
app:
  cache:
    default-ttl: 3600  # 1 hour in seconds
  feature-flags:
    new-user-flow: true
    enhanced-reporting: true
    beta-features: false
  rate-limiting:
    enabled: true
    limit: 1000
    duration: 60  # seconds
  monitoring:
    alert-threshold: 95  # percentage
    metrics-collection-interval: 15  # seconds
  resilience:
    timeout: 10000  # 10 seconds
    retry-count: 3
    circuit-breaker-enabled: true