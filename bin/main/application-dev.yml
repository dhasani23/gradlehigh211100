# Development Environment Configuration for gradlehigh211100
# This file contains specific configurations for the development environment

# Server configuration
server:
  port: 8080
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/plain
  tomcat:
    max-threads: 100
    min-spare-threads: 20

# Spring configuration
spring:
  application:
    name: gradlehigh211100
  # Database configuration
  datasource:
    primary:
      url: jdbc:h2:mem:devdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      driver-class-name: org.h2.Driver
      username: sa
      password: 
      hikari:
        maximum-pool-size: 10
        minimum-idle: 5
        idle-timeout: 30000
    secondary:
      url: jdbc:postgresql://localhost:5432/gradlehigh211100_dev
      driver-class-name: org.postgresql.Driver
      username: dev_user
      password: dev_password
      hikari:
        maximum-pool-size: 5
        minimum-idle: 2
  h2:
    console:
      enabled: true
      path: /h2-console
  # JPA configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
  # Cache configuration
  cache:
    type: redis
    redis:
      time-to-live: 600000
      cache-null-values: false
  # Jackson configuration
  jackson:
    serialization:
      indent-output: true
      write-dates-as-timestamps: false
    default-property-inclusion: non_null
  # Mail configuration for development notifications
  mail:
    host: localhost
    port: 1025
    username: dev-mail
    password: dev-mail-password
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# Eureka service discovery configuration
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 30

# Micronaut configuration
micronaut:
  application:
    name: gradlehigh211100
  server:
    port: 8081
  http:
    client:
      read-timeout: 5s
      connect-timeout: 5s
  # Development specific Micronaut configurations
  router:
    static-resources:
      swagger:
        enabled: true
        paths: classpath:META-INF/swagger
        mapping: /swagger/**

# Actuator endpoints for monitoring and management
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Logging configuration
logging:
  level:
    root: INFO
    com.gradlehigh211100: DEBUG
    org.springframework: INFO
    org.hibernate: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application-dev.log
    max-size: 10MB
    max-history: 10

# Security configuration for development
security:
  basic:
    enabled: false
  jwt:
    secret: dev-jwt-secret-key-for-local-development-only
    expiration: 3600000
    header: Authorization
    prefix: "Bearer "
  cors:
    allowedOrigins: "*"
    allowedMethods: GET,POST,PUT,DELETE,OPTIONS
    allowedHeaders: "*"

# API Gateway configuration
gateway:
  routes:
    user-service:
      path: /users/**
      url: http://localhost:8091
      strip-prefix: false
    product-service:
      path: /products/**
      url: http://localhost:8092
      strip-prefix: false
    order-service:
      path: /orders/**
      url: http://localhost:8093
      strip-prefix: false

# Swagger documentation configuration
swagger:
  enabled: true
  title: Gradlehigh211100 API
  description: API Documentation for Gradlehigh211100 Development Environment
  version: 1.0.0
  contact:
    name: Development Team
    email: dev@gradlehigh211100.com

# Redis configuration
redis:
  host: localhost
  port: 6379
  password: 
  timeout: 2000
  database: 0

# Feature toggles for development
features:
  monitoring: true
  service-discovery: true
  cache: true
  metrics: true
  detailed-logging: true
  mock-external-services: true

# Circuit breaker configuration
resilience4j:
  circuitbreaker:
    instances:
      userService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
      productService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true