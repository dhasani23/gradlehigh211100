# Application configuration for gradlehigh211100
# This is the main configuration file for Spring Boot properties

# Spring Boot core configuration
spring:
  application:
    name: gradlehigh211100
  
  # Database configurations
  datasource:
    primary:
      url: jdbc:postgresql://localhost:5432/main_db
      username: ${DB_USERNAME:postgres}
      password: ${DB_PASSWORD:postgres}
      driver-class-name: org.postgresql.Driver
      hikari:
        maximum-pool-size: 10
        minimum-idle: 5
        connection-timeout: 30000
    secondary:
      url: jdbc:h2:mem:testdb
      username: sa
      password:
      driver-class-name: org.h2.Driver
  
  # JPA/Hibernate configuration
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
        format_sql: true
        show_sql: false
        use_sql_comments: true
  
  # Cache configuration
  cache:
    type: redis
    redis:
      time-to-live: 3600000
      cache-null-values: false
  
  # Jackson configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      indent-output: true
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSSZ
    default-property-inclusion: non_null

# Server configuration
server:
  port: 8080
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/plain
  undertow:
    io-threads: 4
    worker-threads: 32
    buffer-size: 1024
    direct-buffers: true

# Eureka service discovery
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30

# Spring cloud config
cloud:
  config:
    uri: http://localhost:8888
    fail-fast: true
    retry:
      max-attempts: 6
      initial-interval: 1000
      max-interval: 2000
      multiplier: 1.1

# Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /management
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    export:
      prometheus:
        enabled: true

# Logging configuration
logging:
  level:
    root: INFO
    org.springframework: INFO
    com.gradlehigh211100: DEBUG
  file:
    name: logs/application.log
    max-size: 10MB
    max-history: 10
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# API Gateway configuration
api-gateway:
  routes:
    user-service:
      path: /users/**
      url: http://user-service:8081
      strip-prefix: false
    product-service:
      path: /products/**
      url: http://product-service:8082
      strip-prefix: false
    order-service:
      path: /orders/**
      url: http://order-service:8083
      strip-prefix: false
  timeout:
    connect: 5000
    read: 10000
  retry:
    max-attempts: 3
    backoff:
      initial-interval: 1000
      multiplier: 2
      max-interval: 8000

# Swagger configuration
swagger:
  enabled: true
  title: Gradlehigh211100 API
  description: API documentation for the orchestration microservice
  version: 1.0.0
  contact:
    name: Development Team
    email: dev@example.com
  base-package: com.gradlehigh211100

# Security configuration
security:
  jwt:
    secret: ${JWT_SECRET:default_secret_key_should_be_changed_in_production}
    expiration: 86400 # 1 day in seconds
  cors:
    allowed-origins: "*"
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    max-age: 3600

# Micronaut specific configuration
micronaut:
  application:
    name: gradlehigh211100
  server:
    port: 8080
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
  http:
    client:
      read-timeout: 10s
      connect-timeout: 5s
  
# Health checks configuration
health:
  status:
    http-mapping:
      DOWN: 503
      OUT_OF_SERVICE: 503
      UNKNOWN: 500
  services:
    user-service:
      url: http://user-service:8081/health
    product-service:
      url: http://product-service:8082/health
    order-service:
      url: http://order-service:8083/health

# Custom application properties
application:
  feature-flags:
    new-user-registration: true
    product-recommendations: true
    order-tracking: true
  rate-limit:
    enabled: true
    limit: 100
    refresh-period: 60
  maintenance:
    scheduled: false
    message: "System is operating normally"
  cache:
    default-ttl-seconds: 3600
    max-entries: 10000