# Application configuration for ProductCatalog module
# This file contains configuration properties for the ProductCatalog module

spring:
  application:
    name: product-catalog
  
  # Database configuration using PostgreSQL for production and H2 for testing
  datasource:
    url: jdbc:postgresql://localhost:5432/product_catalog_db
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 60000
      connection-timeout: 30000
  
  # JPA/Hibernate configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 50
          batch_versioned_data: true
    open-in-view: false

  # Cache configuration using Redis
  cache:
    type: redis
    redis:
      time-to-live: 3600000 # 1 hour in milliseconds
      cache-null-values: false

  # Redis configuration for caching
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    timeout: 2000
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 2
        max-wait: -1ms

# Elasticsearch configuration for product search
elasticsearch:
  clustername: ${ELASTICSEARCH_CLUSTER:product-catalog-cluster}
  host: ${ELASTICSEARCH_HOST:localhost}
  port: ${ELASTICSEARCH_PORT:9200}
  username: ${ELASTICSEARCH_USERNAME:}
  password: ${ELASTICSEARCH_PASSWORD:}
  connection-timeout: 5000
  socket-timeout: 5000
  indices:
    product:
      name: products
      shards: 5
      replicas: 1
    category:
      name: categories
      shards: 3
      replicas: 1
  settings:
    refresh_interval: 1s
    analysis:
      analyzer:
        autocomplete:
          type: custom
          tokenizer: standard
          filter: [lowercase, autocomplete_filter]
      filter:
        autocomplete_filter:
          type: edge_ngram
          min_gram: 1
          max_gram: 20

# Product catalog specific configuration
product-catalog:
  # Image processing configuration
  image:
    storage-path: ${IMAGE_STORAGE_PATH:/data/products/images}
    allowed-extensions: jpg,jpeg,png,webp
    max-file-size: 5MB
    thumbnails:
      small: 100x100
      medium: 300x300
      large: 800x800
    optimization:
      enabled: true
      quality: 85
      format: webp
  
  # Inventory configuration
  inventory:
    low-stock-threshold: 5
    enable-alerts: true
    reserve-timeout-minutes: 30
    
  # Category configuration
  category:
    max-depth: 5
    cache-ttl: 3600 # seconds
    
  # Product relationships
  relationships:
    types: cross-sell,up-sell,accessory,alternative
    max-related-products: 10
    
  # Search configuration
  search:
    result-page-size: 20
    max-page-size: 100
    highlight-enabled: true
    facets-enabled: true
    suggestion-enabled: true
    fuzzy-search-enabled: true
    fuzzy-search-boost: 0.5
    min-score-threshold: 0.3
    
  # Integration configuration
  integration:
    external-product-systems:
      enabled: false
      refresh-interval: 3600 # seconds
      endpoints:
        system1: https://api.external-system1.com/products
        system2: https://api.external-system2.com/catalog
      timeout: 5000 # milliseconds

# Actuator endpoints for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true
  info:
    git:
      mode: full

# Logging configuration
logging:
  level:
    root: INFO
    org.springframework: INFO
    com.gradlehigh211100.productcatalog: DEBUG
    org.hibernate: INFO
    org.elasticsearch: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/product-catalog.log
    max-size: 10MB
    max-history: 10

# Server configuration
server:
  port: 8081
  servlet:
    context-path: /api/v1
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 2048

# Micronaut specific configuration
micronaut:
  application:
    name: product-catalog
  server:
    port: ${server.port}
  metrics:
    enabled: true
    export:
      prometheus:
        enabled: true
        step: PT1M
  caches:
    product-cache:
      expire-after-write: 1h
    category-cache:
      expire-after-write: 3h