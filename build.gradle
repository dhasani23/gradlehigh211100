/*
 * Build file for the Root module of gradlehigh211100
 * 
 * This build script configures the main application that serves as the orchestration
 * module and entry point for all microservices within the system.
 */

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.22.RELEASE'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.gradlehigh211100'
version = '0.1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Edgware.SR6'
    }
}

dependencies {
    // Spring Boot Dependencies
    compile('org.springframework.boot:spring-boot-starter:1.5.22.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-web:1.5.22.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-actuator:1.5.22.RELEASE')
    
    // Spring Cloud Dependencies
    compile('org.springframework.cloud:spring-cloud-starter-config:1.4.7.RELEASE')
    compile('org.springframework.cloud:spring-cloud-starter-eureka:1.4.7.RELEASE')
    
    // Micronaut Dependencies
    compile('io.micronaut:micronaut-core:1.3.7')
    compile('io.micronaut:micronaut-http-server-netty:1.3.7')
    compile('io.micronaut:micronaut-runtime:1.3.7')
    
    // Monitoring and Metrics
    compile('io.micrometer:micrometer-registry-prometheus:1.1.6')
    
    // API Documentation
    compile('io.springfox:springfox-swagger2:2.9.2')
    compile('io.springfox:springfox-swagger-ui:2.9.2')
    
    // Database
    runtime('com.h2database:h2:1.4.197')
    runtime('org.postgresql:postgresql:42.2.5')
    
    // Test Dependencies
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

// Task to generate wrapper with specified Gradle version
task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
}

bootRepackage {
    mainClass = 'com.gradlehigh211100.Application'
    executable = true
}

// Task to display project properties
task projectInfo {
    doLast {
        println "Project Name: $project.name"
        println "Java Version: $sourceCompatibility"
        println "Spring Boot Version: 1.5.22.RELEASE"
        println "Micronaut Version: 1.3.7"
    }
}

// FIXME: Configure proper logging levels for production deployment
// TODO: Set up separate profiles for development, testing, and production
// TODO: Configure integration tests with proper database setup