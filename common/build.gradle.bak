/*
 * Gradle build file for the Common module of gradlehigh211100 project
 */

plugins {
    id 'java-library'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

group = 'com.gradlehigh211100'
version = '0.1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot dependencies
    api 'org.springframework.boot:spring-boot-starter:2.1.18.RELEASE'
    api 'org.springframework.boot:spring-boot-starter-validation:2.1.18.RELEASE'
    
    // Jackson for JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.10.8'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    
    // Apache Commons
    implementation 'org.apache.commons:commons-lang3:3.7'
    
    // Micronaut (basic components)
    implementation 'io.micronaut:micronaut-core:1.3.7'
    implementation 'io.micronaut:micronaut-inject:1.3.7'
    
    // Testing dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.23.4'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnit()
}

// Generate Javadoc for the common module
javadoc {
    title = "Gradlehigh211100 Common Module API Documentation"
    if (file("src/main/java/overview.html").exists()) {
        options.overview = "src/main/java/overview.html"
    }
    options.addStringOption('Xdoclint:none', '-quiet')
}

// Create source jar for reference
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

// Create javadoc jar for reference
task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

// Include sources and javadoc when building
artifacts {
    archives(sourcesJar)
    archives(javadocJar)
}