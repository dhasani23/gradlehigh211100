# User Service Application Configuration
# Project: gradlehigh211100

spring:
  application:
    name: user-service
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/user_service_db
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    open-in-view: false
  
  # H2 Configuration for Development
  h2:
    console:
      enabled: ${H2_CONSOLE_ENABLED:false}
      path: /h2-console
      settings:
        web-allow-others: false
  
  # Profiles
  profiles:
    active: ${ACTIVE_PROFILE:dev}

# Server Configuration
server:
  port: 8081
  servlet:
    context-path: /api/v1
  tomcat:
    max-threads: 200
    min-spare-threads: 10

# Security Configuration
security:
  basic:
    enabled: false
  ignored: /api/v1/auth/**,/h2-console/**
  signing-key: ${JWT_SECRET:SomeVerySecretKey123!}
  encoding-strength: 12
  security-realm: User Service Realm

# JWT Configuration
jwt:
  header: Authorization
  prefix: Bearer 
  expiration: 86400 # 24 hours in seconds
  refresh-expiration: 604800 # 7 days in seconds
  claims:
    issuer: user-service
    audience: user-clients

# User Service Configuration
user-service:
  registration:
    enable-email-verification: true
    verification-expiry-hours: 24
    default-role: CUSTOMER
  password:
    min-length: 8
    require-special-char: true
    require-number: true
    require-uppercase: true
    reset-token-expiry-hours: 2
  session:
    concurrent-sessions-limit: 3
    inactive-timeout-minutes: 30

# Audit Configuration
audit:
  enabled: true
  log-to-db: true
  log-to-file: false
  include-request-params: true
  include-response-body: false

# Logging Configuration
logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    com.gradlehigh211100.userservice: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file: logs/user-service.log

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
    info:
      enabled: true

# CORS Configuration
cors:
  allowed-origins: http://localhost:3000,https://app.gradlehigh211100.com
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: Authorization,Content-Type
  allow-credentials: true
  max-age: 3600

# Cache Configuration
cache:
  type: caffeine
  cache-names: users,roles,permissions
  caffeine:
    spec: maximumSize=500,expireAfterWrite=30m

# Custom Micronaut Configuration
micronaut:
  application:
    name: user-service
  security:
    enabled: true
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: ${JWT_SECRET:SomeVerySecretKey123!}